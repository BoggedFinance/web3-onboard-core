{"version":3,"file":"core.umd.js","sources":["../src/core.ts"],"sourcesContent":["import { globalAppender } from './global-appender';\nimport { Action, Appender, LogLevel, LogMessage, Identity } from './types';\n\nlet globalInputId = 0;\n\nconst getOptions = (options: [] | [string | Identity | undefined] | [string, Identity]): { tag?: string, parentId?: number } => {\n    let parentId, tag;\n    if (options.length === 1) {\n        if (typeof options[0] === 'string') {\n            tag = options[0];\n        } else {\n            parentId = options[0]?.id;\n        }\n    } else if (options.length === 2) {\n        tag = options[0];\n        parentId = options[1]?.id;\n    }\n    return { parentId, tag };\n};\n\nexport const createLogger = <ErrorContext = Error>(...args: [] | [string | Identity | undefined] | [string, Identity]) => {\n    let initialLogLevel: number = LogLevel.info;\n\n    let myAppender = (message: LogMessage<ErrorContext>) => { globalAppender && globalAppender(message); };\n    \n    const inputId = globalInputId++;\n    \n    const { tag, parentId } = getOptions(args);\n    \n    const append = (message: string, action: Action, loglevel: LogLevel, context?: ErrorContext) => {\n        myAppender && myAppender({\n            action,\n            inputId,\n            message,\n            loglevel,\n            tag,\n            parentId,\n            ref,\n            context\n        } as LogMessage<ErrorContext>);\n    };\n\n    const loggerInstance = Object.assign(\n        (message: string, loglevel: LogLevel = LogLevel.info, context?: ErrorContext) => {\n            append(message, Action.log, loglevel, context);\n        }, {\n            // Fine to be started multiple times\n            start(message: string, loglevel?: LogLevel, context?: ErrorContext) {\n                if (loglevel !== undefined) {\n                    initialLogLevel = loglevel;\n                }\n                append(message, Action.start, initialLogLevel, context);\n            },\n            // Fine to be updated multiple times\n            update(message: string, loglevel?: LogLevel, context?: ErrorContext) {\n                append(message, Action.update, loglevel ?? initialLogLevel, context);\n            },\n            // Fine to be finished multiple times\n            finish(message: string, loglevel?: LogLevel, context?: ErrorContext) {\n                append(message, Action.finish, loglevel ?? initialLogLevel, context);\n            },\n            appender(appender?: Appender<ErrorContext>) {\n                if (appender !== undefined) {\n                    myAppender = appender;\n                }\n                return myAppender;\n            }\n        }\n    );\n\n    Object.defineProperty(loggerInstance, 'id', {\n        value: inputId,\n        writable: false\n    });\n\n    const ref = new WeakRef(loggerInstance);\n\n    return loggerInstance;\n};\n"],"names":["globalInputId","args","initialLogLevel","myAppender","message","globalAppender","inputId","tag","parentId","options","length","id","getOptions","append","action","loglevel","context","ref","loggerInstance","Object","assign","start","undefined","update","finish","appender","defineProperty","value","writable","WeakRef"],"mappings":"4UAGA,IAAIA,EAAgB,iBAiBQ,IAA0BC,KAClD,IAAIC,IAEAC,EAAcC,IAAwCC,kBAAkBA,iBAAeD,IAE3F,MAAME,EAAUN,KAEVO,IAAEA,EAAGC,SAAEA,GAtBE,CAACC,YAChB,IAAID,EAAUD,EAWd,OAVuB,IAAnBE,EAAQC,OACkB,iBAAfD,EAAQ,GACfF,EAAME,EAAQ,GAEdD,YAAWC,EAAQ,yBAAIE,GAED,IAAnBF,EAAQC,SACfH,EAAME,EAAQ,GACdD,YAAWC,EAAQ,yBAAIE,IAEpB,CAAEH,SAAAA,EAAUD,IAAAA,IAUOK,CAAWX,GAE/BY,EAAS,CAACT,EAAiBU,EAAgBC,EAAoBC,KACjEb,GAAcA,EAAW,CACrBW,OAAAA,EACAR,QAAAA,EACAF,QAAAA,EACAW,SAAAA,EACAR,IAAAA,EACAC,SAAAA,EACAS,IAAAA,EACAD,QAAAA,KAIFE,EAAiBC,OAAOC,QAC1B,CAAChB,EAAiBW,IAAoCC,KAClDH,EAAOT,IAAqBW,EAAUC,KACvC,CAECK,MAAMjB,EAAiBW,EAAqBC,QACvBM,IAAbP,IACAb,EAAkBa,GAEtBF,EAAOT,IAAuBF,EAAiBc,IAGnDO,OAAOnB,EAAiBW,EAAqBC,GACzCH,EAAOT,IAAwBW,MAAAA,EAAAA,EAAYb,EAAiBc,IAGhEQ,OAAOpB,EAAiBW,EAAqBC,GACzCH,EAAOT,IAAwBW,MAAAA,EAAAA,EAAYb,EAAiBc,IAEhES,SAASA,SACYH,IAAbG,IACAtB,EAAasB,GAEVtB,KAKnBgB,OAAOO,eAAeR,EAAgB,KAAM,CACxCS,MAAOrB,EACPsB,UAAU,IAGd,MAAMX,EAAM,IAAIY,QAAQX,GAExB,OAAOA"}