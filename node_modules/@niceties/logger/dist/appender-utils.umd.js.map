{"version":3,"file":"appender-utils.umd.js","sources":["../src/appender-utils.ts"],"sourcesContent":["import { Appender, LogMessage } from './types';\n\nexport const filterMessages = <ErrorContext = Error, Api extends object = object>(predicate: (logMessage: LogMessage<ErrorContext>) => boolean, appender: Appender<ErrorContext>, api?: Api): Appender<ErrorContext> & Api => {\n    return Object.assign(function(logMessage: LogMessage<ErrorContext>) {\n        if (predicate(logMessage)) {\n            appender(logMessage);\n        }\n    }, api);\n};\n\nexport const combineAppenders = <ErrorContext = Error>(...appenders: Appender<ErrorContext>[]): Appender<ErrorContext> => {\n    return (message: LogMessage<ErrorContext>) => {\n        for(const appender of appenders) {\n            try {\n                appender(message);\n            } catch(e) { /* eat the error */ }\n        }\n    };\n};\n"],"names":["appenders","message","appender","e","predicate","api","Object","assign","logMessage"],"mappings":"sRAUgC,IAA0BA,IAC9CC,IACJ,IAAI,MAAMC,KAAYF,EAClB,IACIE,EAASD,GACX,MAAME,uBAbU,CAAoDC,EAA8DF,EAAkCG,IACvKC,OAAOC,QAAO,SAASC,GACtBJ,EAAUI,IACVN,EAASM,KAEdH"}